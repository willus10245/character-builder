name: PR build

on:
  pull_request:
    branches: [main]

env:
  MIX_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [23.2.2]
        elixir: [1.11.3]
        node: [14.16.0]

    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dnd_test
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Check Mix deps cache
        uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}

      - name: Check npm deps cache
        uses: actions/cache@v1
        id: npm-cache
        with:
          path: assets/node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install Mix deps
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Install npm deps
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm --prefix assets ci

      - name: Check Code Quality
        run: |
          mix format --check-formatted
          mix credo --strict

      - name: Run Tests
        run: mix test --exclude feature
